# Generated by Django 4.1.4 on 2022-12-10 12:16

from django.conf import settings
import django.contrib.gis.db.models.fields
from django.db import migrations, models
import django.db.models.deletion
import phonenumber_field.modelfields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Activities',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('activity', models.CharField(max_length=500)),
                ('description', models.TextField(blank=True, null=True)),
                ('budget', models.FloatField()),
                ('date_due_debut', models.DateField()),
                ('date_due_fin', models.DateField()),
                ('date_due_delivery', models.DateField()),
            ],
            options={
                'ordering': ['pk'],
            },
        ),
        migrations.CreateModel(
            name='Axes',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True, null=True)),
            ],
            options={
                'ordering': ['pk'],
            },
        ),
        migrations.CreateModel(
            name='Components',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('component', models.CharField(max_length=500)),
                ('description', models.TextField(blank=True, null=True)),
                ('budget', models.FloatField(blank=True, null=True)),
            ],
            options={
                'ordering': ['pk'],
            },
        ),
        migrations.CreateModel(
            name='Contracts',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reference_code', models.CharField(max_length=100)),
                ('amount', models.FloatField()),
                ('datedebut', models.DateField()),
                ('datefin', models.DateField()),
            ],
        ),
        migrations.CreateModel(
            name='Currencies',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('currency', models.CharField(max_length=50)),
                ('code', models.CharField(max_length=3)),
                ('symbol', models.CharField(max_length=3)),
            ],
        ),
        migrations.CreateModel(
            name='Documents',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('document', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='Documenttypes',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Entities',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('acronym', models.CharField(max_length=200)),
                ('name_en', models.CharField(blank=True, max_length=200, null=True)),
                ('nom_fr', models.CharField(blank=True, max_length=200, null=True)),
                ('nationality', models.CharField(blank=True, max_length=200, null=True)),
                ('email_address', models.EmailField(blank=True, max_length=254, null=True)),
                ('postal_address', models.CharField(blank=True, max_length=200, null=True)),
                ('web_site', models.URLField(blank=True, null=True)),
            ],
            options={
                'ordering': ['pk'],
            },
        ),
        migrations.CreateModel(
            name='Phases',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('phase', models.CharField(max_length=100)),
            ],
            options={
                'ordering': ['pk'],
            },
        ),
        migrations.CreateModel(
            name='Phone_number_types',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Phone_number_type', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='Phone_numbers',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('phone_number', phonenumber_field.modelfields.PhoneNumberField(max_length=128, region=None)),
                ('phone_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tache.phone_number_types')),
            ],
            options={
                'ordering': ['pk'],
            },
        ),
        migrations.CreateModel(
            name='PopulatedPlaces',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('latitude', models.FloatField()),
                ('longitude', models.FloatField()),
                ('pop_max', models.BigIntegerField()),
                ('geom', django.contrib.gis.db.models.fields.PointField(srid=4326)),
            ],
        ),
        migrations.CreateModel(
            name='ProjectEntities',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=100, null=True)),
                ('entity', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tache.entities')),
            ],
        ),
        migrations.CreateModel(
            name='ProjectEntitiestypes',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Responsibles',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('civility', models.CharField(blank=True, max_length=10, null=True)),
                ('first_name', models.CharField(max_length=200)),
                ('last_name', models.CharField(max_length=200)),
                ('email_address', models.EmailField(max_length=254)),
                ('job_title', models.CharField(blank=True, max_length=200, null=True)),
                ('entity', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='tache.entities')),
                ('phone_number', models.ManyToManyField(blank=True, null=True, to='tache.phone_numbers')),
                ('project_entity', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='tache.projectentities')),
                ('user', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['pk'],
            },
        ),
        migrations.CreateModel(
            name='WorldBorder',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('area', models.IntegerField()),
                ('pop2005', models.IntegerField(verbose_name='Population 2005')),
                ('fips', models.CharField(max_length=2, null=True, verbose_name='FIPS Code')),
                ('iso2', models.CharField(max_length=2, verbose_name='2 Digit ISO')),
                ('iso3', models.CharField(max_length=3, verbose_name='3 Digit ISO')),
                ('un', models.IntegerField(verbose_name='United Nations Code')),
                ('region', models.IntegerField(verbose_name='Region Code')),
                ('subregion', models.IntegerField(verbose_name='Sub-Region Code')),
                ('lon', models.FloatField()),
                ('lat', models.FloatField()),
                ('mpoly', django.contrib.gis.db.models.fields.MultiPolygonField(srid=4326)),
            ],
        ),
        migrations.CreateModel(
            name='Tasks',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('task', models.CharField(max_length=500)),
                ('objective', models.CharField(max_length=500)),
                ('description', models.TextField(blank=True, null=True)),
                ('budget', models.FloatField()),
                ('date_due_debut', models.DateField()),
                ('date_due_fin', models.DateField()),
                ('activity', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tache.activities')),
                ('responsible', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='tache.responsibles')),
            ],
            options={
                'ordering': ['pk'],
            },
        ),
        migrations.CreateModel(
            name='Results',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('result', models.CharField(max_length=500)),
                ('description', models.TextField(blank=True, null=True)),
                ('budget', models.FloatField()),
                ('component', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tache.components')),
            ],
            options={
                'ordering': ['pk'],
            },
        ),
        migrations.CreateModel(
            name='Projects',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reference_code', models.CharField(blank=True, max_length=200, null=True)),
                ('acronym', models.CharField(max_length=200)),
                ('name', models.CharField(blank=True, max_length=512, null=True)),
                ('objective', models.TextField(blank=True, null=True)),
                ('background_context', models.TextField(blank=True, null=True)),
                ('budget', models.FloatField(blank=True, null=True)),
                ('date_debut', models.DateField(blank=True, null=True)),
                ('date_debut_execution', models.DateField(blank=True, null=True)),
                ('date_closing', models.DateField(blank=True, null=True)),
                ('date_final_evaluation', models.DateField(blank=True, null=True)),
                ('axe', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tache.axes')),
                ('funder', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='funder', to='tache.entities')),
            ],
            options={
                'ordering': ['pk'],
            },
        ),
        migrations.AddField(
            model_name='projectentities',
            name='project',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tache.projects'),
        ),
        migrations.AddField(
            model_name='projectentities',
            name='type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tache.projectentitiestypes'),
        ),
        migrations.CreateModel(
            name='Progressions',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_record', models.DateField()),
                ('progess_rate', models.FloatField(blank=True, null=True)),
                ('contract', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='tache.contracts')),
                ('document', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='tache.documents')),
                ('phase', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='tache.phases')),
                ('task', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tache.tasks')),
            ],
            options={
                'ordering': ['pk'],
            },
        ),
        migrations.CreateModel(
            name='Products',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('product', models.CharField(max_length=500)),
                ('description', models.TextField(blank=True, null=True)),
                ('budget', models.FloatField()),
                ('result', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tache.results')),
            ],
            options={
                'ordering': ['pk'],
            },
        ),
        migrations.AddField(
            model_name='entities',
            name='phone_number',
            field=models.ManyToManyField(blank=True, null=True, to='tache.phone_numbers'),
        ),
        migrations.AddField(
            model_name='documents',
            name='type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tache.documenttypes'),
        ),
        migrations.CreateModel(
            name='CurrencyExchangeRates',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('exchange_rate', models.FloatField()),
                ('fm_currency', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='fm_currency', to='tache.currencies')),
                ('to_currency', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='to_currency', to='tache.currencies')),
            ],
        ),
        migrations.AddField(
            model_name='contracts',
            name='document',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tache.documents'),
        ),
        migrations.AddField(
            model_name='contracts',
            name='entity_client',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='entity_client', to='tache.entities'),
        ),
        migrations.AddField(
            model_name='contracts',
            name='entity_provider',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='entity_provider', to='tache.entities'),
        ),
        migrations.AddField(
            model_name='contracts',
            name='signer_client',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='signer_client', to='tache.responsibles'),
        ),
        migrations.AddField(
            model_name='contracts',
            name='signer_provider',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='signer_provider', to='tache.responsibles'),
        ),
        migrations.AddField(
            model_name='components',
            name='project',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tache.projects'),
        ),
        migrations.CreateModel(
            name='Aoi',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('geom', django.contrib.gis.db.models.fields.MultiPolygonField(srid=4326)),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tache.projects')),
            ],
        ),
        migrations.CreateModel(
            name='ActivitiesMilestones',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_due_milstone', models.DateField()),
                ('activity', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tache.activities')),
            ],
        ),
        migrations.CreateModel(
            name='ActivitiesEntitiesBudget',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Budget', models.FloatField()),
                ('activity', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tache.activities')),
                ('currency', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='tache.currencies')),
                ('project_entity', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tache.projectentities')),
            ],
        ),
        migrations.CreateModel(
            name='ActivitiesBudgetPlan',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('due_date', models.DateField()),
                ('planned_disbursment', models.FloatField(blank=True, null=True)),
                ('planned_grant', models.FloatField(blank=True, null=True)),
                ('balance', models.FloatField(blank=True, null=True)),
                ('activity', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='tache.activities')),
                ('currency', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='tache.currencies')),
            ],
            options={
                'ordering': ['pk'],
            },
        ),
        migrations.AddField(
            model_name='activities',
            name='product',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tache.products'),
        ),
    ]
